load("dragons.RData")
dragons
require(lme4)
?lmer
dragons
dragon.fit = lmer(data=dragons, testSore~bodyLength+mountainRange+(1|site/mountainRange))
dragon.fit = lmer(data=dragons, testScore~bodyLength+mountainRange+(1|site/mountainRange))
plot(dragons$testScore, resid(residuals(dragon.fit)), xlab="Bale", ylab="Residual", pch=16)
dragons
dragons$testScore
resid(dragon.fit)
dragon.fit = lmer(data=dragons, testScore~bodyLength+mountainRange+(1|site/mountainRange))
plot(dragons$testScore, resid(dragon.fit), xlab="Bale", ylab="Residual", pch=16)
abline(h=0, lty=2)
dragon.fit = lmer(data=dragons, testScore~bodyLength+mountainRange+(1|site/mountainRange))
plot(dragons$testScore, resid(dragon.fit), xlab="testScore", ylab="Residual", pch=16)
abline(h=0, lty=2)
temp<-qqnorm(tapply(dragons$mountainRange,dragons$site,mean), pch=".")
temp<-qqnorm(tapply(dragons$mountainRange,dragons$site,mean), pch=".")
temp<-qqnorm(
)
tapply(dragons$mountainRange,dragons$site,mean)
?tapply
dragons$mountainRange
fit1 = lm(data=dragons, testScore~bodyLength+mountainRange+site)
fit1 = lm(data=dragons, testScore~bodyLength)
fit2 = lmer(data=dragons, testScore~bodyLength+(1|moutainRange))
fit1 = lm(data=dragons, testScore~bodyLength)
fit2 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange))
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|site/mountainRange))
anova(fit1,fit2)
dragons
fit1 = lm(data=dragons, testScore~bodyLength)
fit2 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange),REML=FALSE)
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|site/mountainRange),REML=FALSE)
anova(fit1, fit2)
anova(fit2, fit2)
anova(fit2, fit3)
fit1 = lmer(data=dragons, testScore~bodyLength, REML=FALSE)
fit2 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange),REML=FALSE)
anova(fit1, fit2)
fit1 = lmer(data=dragons, testScore~bodyLength)
fit2 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange),REML=FALSE)
BIC(fit1)
BIC(fit2)
BIC(fit2)
BIC(fit1)
anova(fit2, fit1)
anova(fit2, fit1);anova(fit3;fit2)
anova(fit2, fit1);anova(fit3, fit2)
confint(profile(fit3))
confint(profile(fit3),signames = FALSE)
confint(profile(fit3,signames = FALSE))
fit1 = lm(data=dragons, testScore~bodyLength)
fit2 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange),REML=FALSE)
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|site/mountainRange),REML=FALSE)
anova(fit2, fit1);anova(fit3, fit2)
ranef(fit3)
require(ggplot2)
summary(fit2)
pt(0.460)
fit1 = lm(data=dragons, testScore~bodyLength)
summary(fit1)
anova(lmer(data=dragons, testScore~(1|mountainRange)),fit2)
qplot(x=names(ranef(fit3)$`mountainRange:site`),y=ranef(fit3)$`mountainRange:site`)
plot(x=names(ranef(fit3)$`mountainRange:site`),y=ranef(fit3)$`mountainRange:site`)
names(ranef(fit3)$`mountainRange:site`)
raneffect = ranef(fit3)
raneffect
raneffect[[1]]
?rownames
plot(x=rownames(ranef(fit3)$`mountainRange:site`),y=ranef(fit3)$`mountainRange:site`)
plot(x=rownames(ranef(fit3)[[1]]),y=ranef(fit3)[[1]])
rownames(ranef(fit3)[[1]])
ranef(fit3)[[1]]
plot(x=rownames(ranef(fit3)[[1]]),y=ranef(fit3)[[1]][,1])
plot(x=rownames(raneffect[[1]]),y=raneffect[[1]][,1])
qplot(x=rownames(raneffect[[1]]),y=raneffect[[1]][,1])
qplot(x=rownames(raneffect[[1]]),y=raneffect[[1]][,1])+opts(axis.text.x=theme_text(angle=-90))
qplot(x=rownames(raneffect[[1]]),y=raneffect[[1]][,1])+theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(lme4)
library(ggplot2)
table(dragons$mountainRange,dragons$site)
boxplot(testScore ~ mountainRange, data = dragons)
ggplot(dragons, aes(x = bodyLength, y = testScore, shape = mountainRange))+
geom_point(size = 1.5)+ scale_shape_manual(values=1:nlevels(dragons$mountainRange)) +
theme_classic()
mixed.full = lmer(testScore~bodyLength+(1|mountainRange)+
(1|mountainRange:site),data=dragons,REML=F)
mixed.reduced = lmer(testScore~bodyLength+(1|mountainRange),data=dragons,REML=F)
fixed = lm(testScore~bodyLength,data=dragons)
anova(mixed.full,mixed.reduced,fixed)
anova(fit3, fit2, fit1)
mixed.reml = lmer(testScore~bodyLength+(1|mountainRange)+
(1|mountainRange:site),data=dragons,REML=T)
summary(mixed.reml)
confint(profile(mixed.reml,signames=F),level=0.95)
ggplot(dragons, aes(x=bodyLength,y=testScore,colour=site))+
facet_wrap(~mountainRange, nrow=3) + geom_point() +  theme_classic() +
geom_line(data=cbind(dragons,pred=predict(mixed.reml)), aes(y = pred)) +
theme(legend.position = "none")
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|site/mountainRange),REML=FALSE)
anova(fit3, fit2, fit1)
anova(mixed.full,mixed.reduced,fixed)
fit3 = lmer(data=dragons, testScore~bodyLength+(1|site/mountainRange),REML=FALSE)
anova(fit3, fit2, fit1)
mixed.full = lmer(testScore~bodyLength+(1|mountainRange)+
(1|mountainRange*site),data=dragons,REML=F)
mixed.full = lmer(testScore~bodyLength+(1|mountainRange)+
(1|mountainRange:site),data=dragons,REML=F)
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|site/mountainRange))
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|mountainRange/site),REML=FALSE)
fit1 = lm(data=dragons, testScore~bodyLength)
fit2 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange),REML=FALSE)
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|mountainRange:site),REML=FALSE)
fit4 = lmer(data=dragons, testScore~(1|mountainRange))
anova(fit3, fit2, fit1)
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|mountainRange/site),REML=FALSE)
fit4 = lmer(data=dragons, testScore~(1|mountainRange))
anova(fit3, fit2, fit1)
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|mountainRange/site),REML=FALSE)
anova(fit3, fit2, fit1)
fit1 = lm(data=dragons, testScore~bodyLength)
fit2 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange),REML=FALSE)
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange/site),REML=FALSE)
fit4 = lmer(data=dragons, testScore~(1|mountainRange))
anova(fit3, fit2, fit1)
fit1 = lm(data=dragons, testScore~bodyLength)
fit2 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange),REML=FALSE)
fit3 = lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|mountainRange/site),REML=FALSE)
fit4 = lmer(data=dragons, testScore~(1|mountainRange))
anova(fit3, fit2, fit1)
summary(lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|mountainRange:site),REML=FALSE))
summary(lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|mountainRange/site),REML=FALSE))
summary(lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|mountainRange:site),REML=FALSE))
summary(lmer(data=dragons, testScore~bodyLength+(1|mountainRange/site),REML=FALSE))
summary(lmer(data=dragons, testScore~bodyLength+(1|mountainRange)+(1|mountainRange/site),REML=FALSE))
?getDataPart
rm(list=ls())
require(tensorsparse)
?get.Data
?get.data
load('figure3.RData')
setwd("~/办公/课程/lab/nip/figures/figure3")
setwd("~/办公/课程/lab/nip/figures/figure3")
load('figure3.RData')
require(tensorsparse)
require(ggplot2)
ggplot(data=figure, aes(x=npq,y=sqrtmse))+geom_point(aes(color = krl))
ggplot(data=figure, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))
ggplot(data=figure, aes(x=npq,y=sqrtmse))+geom_point(aes(color = krl))
ggplot(data=figure, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))
ggplot(data=figure, aes(x=npq,y=sqrtmse))+geom_line()
figure = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c(2,4,8,12), times=11)), sqrtmse = sqrt(mse.re),
rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))
ggplot(data=figure, aes(x=rescalednpq,y=sqrtmse))+geom_point(aes(color = krl))
ggplot(data=figure, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))
ggplot(data=figure, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
figure = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c(2,4,8,12), times=11)),
sqrtmse = sqrt(mse.re), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
mse.re1 = c()
for (npq in seq(20,70,by=5)){
for (krl in c(2,4,8,12)){
set.seed(npq)
data = get.data(npq,npq,npq,krl,krl,krl)
bires = classify2(data$x, krl, krl, krl)
mse.re1 = c(mse.re1, mse(bires, data))
}
}
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c(2,4,8,12), times=11)),
sqrtmse = sqrt(mse.re), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c(2,4,8,12), times=11)),
sqrtmse = sqrt(mse.re1), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c(2,4,8,12), times=11)),
sqrtmse = sqrt(mse.re1/npq), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c(2,4,8,12), times=11)),
sqrtmse = sqrt(mse.re1/npq^3), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c(2,4,8,12), times=11)),
sqrtmse = sqrt(mse.re1/(rep(seq(20,70,by=5), each=4)^3)), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
figure = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c(2,4,8,12), times=11)),
sqrtmse = sqrt(mse.re/(rep(seq(20,70,by=5), each=4)^3)), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
figure = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c(2,4,8,12), times=11)),
sqrtmse = sqrt(mse.re/(rep(seq(20,70,by=5), each=4)^3)), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)
mse.re1 = c()
range.k = c(4,4,8,8); range.r = c(4,8,8,8); range.l = c(4,8,8,12)
for (npq in seq(20,70,by=5)){
for (i in 1:4){
set.seed(npq)
k = range.k[i]; r = range.r[i]; l = range.l[i]
data = get.data(npq,npq,npq,krl,krl,krl)
bires = classify2(data$x, krl, krl, krl)
mse.re1 = c(mse.re1, mse(bires, data))
}
}
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1/(rep(seq(20,70,by=5), each=4)^3)), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
mse.re1 = c()
range.k = c(4,4,8,8); range.r = c(4,8,8,8); range.l = c(4,8,8,12)
for (npq in seq(20,70,by=5)){
for (i in 1:4){
set.seed(npq)
k = range.k[i]; r = range.r[i]; l = range.l[i]
data = get.data(npq,npq,npq,k,r,l)
bires = classify2(data$x, k, r, l)
mse.re1 = c(mse.re1, mse(bires, data))
}
}
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1/(rep(seq(20,70,by=5), each=4)^3)), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(krl))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1/(rep(seq(20,70,by=5), each=4)^3)), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(rep(c(4,8,8,12), times=11)))))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
sqrt(rep(seq(20,70,by=5)/log(rep(c(4,8,8,12), times=11))))
source('~/办公/课程/lab/nip/figures/figure3/figure3.R')
source('~/办公/课程/lab/nip/figures/figure3/figure3.R')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
p1 = c(); q1 = c()
for (n in seq(20,70,by=5)){
k = range.k[i]; r = range.r[i]; l = range.l[i]
p = n*log(k)/log(r); q = n*log(k)/log(l)
p1 = c(p1, p); q1 = c(q1, q)
}
p1
q1
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1/(seq(20,70,by=5)*p1*q1)), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(rep(c(4,8,8,12), times=11)))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
seq(20,70,by=5)*p1*q1
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
sqrt(mse.re1/(seq(20,70,by=5)*p1*q1))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
rep(seq(20,70,by=5), each=4)
rep(seq(20,70,by=5), each=4)*p1*q1
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1/rep(seq(20,70,by=5), each=4)*p1*q1)), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(rep(c(4,8,8,12), times=11))))
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1/rep(seq(20,70,by=5),each=4)*p1*q1), rescalednpq = sqrt(rep(seq(20,70,by=5)/log(rep(c(4,8,8,12), times=11)))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
figure1 = data.frame(npq = rep(seq(20,70,by=5), each=4), krl= as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1/rep(seq(20,70,by=5),each=4)*p1*q1), rescalednpq = sqrt(rep(seq(20,70,by=5), each=4)/rep(log(rep(c(4,8,8,12), times=11)))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
sqrt(mse.re1/rep(seq(20,70,by=5),each=4)*p1*q1)
figure1 = data.frame(npq = rep(seq(20,70,by=5),each=4), krl= as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1/rep(seq(20,70,by=5),each=4)*p1*q1), rescalednpq = sqrt(rep(seq(20,70,by=5), each=4)/rep(log(rep(c(4,8,8,12), times=11)))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
figure1 = data.frame(npq = rep(seq(20,70,by=5),each=4), krl= as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1/rep(seq(20,70,by=5),each=4)*p1*q1), rescalednpq = sqrt(rep(seq(20,70,by=5), each=4)/rep(log(rep(c(4,4,8,8), times=11)))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
rep(seq(20,70,by=5),each=4)
mse.re1
rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)
length(seq(20,70,by=5))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
source('~/办公/课程/lab/nip/figures/figure3/figure3.R')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
figure1 = data.frame(npq = rep(seq(20,70,by=5),each=4), krl = as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1), rescalednpq = sqrt(rep(seq(20,70,by=5), each=4)/rep(log(rep(c(4,4,8,8), times=11)))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
source('~/办公/课程/lab/nip/figures/figure3/figure3.R')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
figure1 = data.frame(npq = rep(seq(20,70,by=5),each=4), krl = as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1), rescalednpq = sqrt(rep(seq(20,70,by=5), each=4)/log(rep(c(4,4,8,8), times=11))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color = krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
sqrt(rep(seq(20,70,by=5),each=4)/log(rep(c(4,4,8,8), times=11)))
source('~/办公/课程/lab/nip/figures/figure3/figure3.R')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
figure1 = data.frame(npq = rep(seq(20,70,by=5),each=4), krl = as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1), rescalednpq = sqrt(rep(seq(20,70,by=5),each=4)/log(rep(c(4,4,8,8),times=11))))
source('~/办公/课程/lab/nip/figures/figure3/figure3.R')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
log(rep(c(4,4,8,8),times=11))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
save.image("~/办公/课程/lab/nip/figures/figure3/figure3.RData")
?pdf
pdf("rescale.pdf")
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
dev.off()
pdf("non-scale.pdf")
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
dev.off()
pdf("rescale.pdf")
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
dev.off()
figure1 = data.frame(npq = rep(seq(20,70,by=5),each=4), krl = as.factor(rep(c("d1=4,d2=4,d3=4","d1=4,d2=8,d2=8","d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1), rescalednpq = sqrt(rep(seq(20,70,by=5),each=4)/log(rep(c(4,8,8,12),times=11))))
pdf("non-scale.pdf")
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
dev.off()
pdf("rescale.pdf")
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
dev.off()
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='sample size n1', y='sqrt(mse)')
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
setwd("~/办公/课程/lab/nip/figures/figure3")
load('figure3.RData')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x=expression(sample~size~n[1]), y=expression(sqrt(mse)))
require(tensorsparse)
require(ggplot2)
figure1 = data.frame(npq = rep(seq(20,70,by=5),each=4), krl = as.factor(rep(c(expression(d[1]=4,d[2]=4,d[3]=4),expression(d[1]=4,d[2]=8,d[3]=8),"d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1), rescalednpq = sqrt(p1*q1/log(rep(c(4,4,8,8),times=11))))
figure1 = data.frame(npq = rep(seq(20,70,by=5),each=4), krl = as.factor(rep(c(expression(d[1]==4,d[2]==4,d[3]==4),expression(d[1]==4,d[2]==8,d[3]==8),"d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1), rescalednpq = sqrt(p1*q1/log(rep(c(4,4,8,8),times=11))))
figure1 = data.frame(npq = rep(seq(20,70,by=5),each=4), krl = as.factor(rep(c('d1=4,d2=4,d3=4','d1=4,d2=8,d3=8',"d1=8,d2=8,d3=8","d1=8,d2=8,d3=12"), times=11)),
sqrtmse = sqrt(mse.re1), rescalednpq = sqrt(p1*q1/log(rep(c(4,4,8,8),times=11))))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x=expression(sample~size~n[1]), y=expression(sqrt(mse)))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point()+
labs(x=expression(sample~size~n[1]), y=expression(sqrt(mse)))+
scale_color_manual(values = c())
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line()+geom_point(aes(shape=krl))+
labs(x=expression(sample~size~n[1]), y=expression(sqrt(mse)))#+
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x=expression(sample~size~n[1]), y=expression(sqrt(mse)))#+
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x=expression(sample~size~n[1]), y=expression(sqrt(mse)))
pdf("non-scale.pdf",width=5,height=3)
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x=expression(sample~size~n[1]), y=expression(sqrt(mse)))
dev.off()
pdf("rescale.pdf",width=5,height=3)
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y='sqrt(mse)')
dev.off()
pdf("rescale.pdf",width=5,height=3)
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y=expression(sqrt(mse)))
dev.off()
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y=expression(sqrt(mse)))
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x=expression(sample~size~n[1]), y=expression(sqrt(mse)))
source('~/办公/课程/lab/nip/figures/figure3/figure3.R')
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x=expression(sample~size~n[1]), y=expression(sqrt(mse)))
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y=expression(sqrt(mse)))
pdf("non-scale.pdf",width=5,height=3)
ggplot(data=figure1, aes(x=npq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x=expression(sample~size~n[1]), y=expression(sqrt(mse)))
dev.off()
pdf("rescale.pdf",width=5,height=3)
ggplot(data=figure1, aes(x=rescalednpq,y=sqrtmse))+geom_line(aes(color=krl))+geom_point(aes(shape=krl))+
labs(x='rescaled sample size N', y=expression(sqrt(mse)))
dev.off()
set.seed(2)
n=40;p=50;q=60;k=3;r=5;l=4;iteration=50
out1 = list()
for (i in 1:3){
error = c(4,8,12)[i]
out1[[i]] = simulation(n,p,q,k,r,l,error,iteration=iteration)
}
set.seed(4)
n=40;p=50;q=60;k=4;r=4;l=4;iteration=50
out3 = list()
for (i in 1:3){
error = c(4,8,12)[i]
out3[[i]] = simulation(n,p,q,k,r,l,error,iteration=iteration)
}
View(out1)
print(out1)
print(out3)
set.seed(2)
n=40;p=40;q=60;k=3;r=5;l=4;iteration=50
out1 = list()
for (i in 1:3){
error = c(4,8,12)[i]
out1[[i]] = simulation(n,p,q,k,r,l,error,iteration=iteration)
}
print(out1)
set.seed(2)
n=40;p=40;q=80;k=3;r=5;l=4;iteration=50
out1 = list()
for (i in 1:3){
error = c(4,8,12)[i]
out1[[i]] = simulation(n,p,q,k,r,l,error,iteration=iteration)
}
print(out1)
n=40;p=40;q=80;k=4;r=4;l=4;iteration=50
out3 = list()
for (i in 1:3){
error = c(4,8,12)[i]
out3[[i]] = simulation(n,p,q,k,r,l,error,iteration=iteration)
}
out3
set.seed(3)
n=40;p=40;q=80;k=3;r=4;l=2;iteration=50
for (i in 1:3){
error = c(4,8,12)[i]
out = sim.choosekrl(n,p,q,k,r,l,error,iteration)
res<-Calculate(c(k,r,l),out)
reskr<-Calculatekrl(out)
cat("The krl choosed by bic:\n")
cat("The correct rate is", res,", meank=",reskr$meank, "(",reskr$sdek,"), meanr=",reskr$meanr, "(", reskr$sder, "), meanl=", reskr$meanl, "(", reskr$sdel, ").\n")
}
set.seed(2)
n=40;p=40;q=40;k=4;r=4;l=4;iteration=50
for (i in 1:3){
error = c(4,8,12)[i]
out = sim.choosekrl(n,p,q,k,r,l,error,iteration)
res<-Calculate(c(k,r,l),out)
reskr<-Calculatekrl(out)
cat("The krl choosed by bic:\n")
cat("The correct rate is", res,", meank=",reskr$meank, "(",reskr$sdek,"), meanr=",reskr$meanr, "(", reskr$sder, "), meanl=", reskr$meanl, "(", reskr$sdel, ").\n")
}
set.seed(3)
n=40;p=40;q=80;k=4;r=4;l=4;iteration=50
for (i in 1:3){
error = c(4,8,12)[i]
out = sim.choosekrl(n,p,q,k,r,l,error,iteration)
res<-Calculate(c(k,r,l),out)
reskr<-Calculatekrl(out)
cat("The krl choosed by bic:\n")
cat("The correct rate is", res,", meank=",reskr$meank, "(",reskr$sdek,"), meanr=",reskr$meanr, "(", reskr$sder, "), meanl=", reskr$meanl, "(", reskr$sdel, ").\n")
}
